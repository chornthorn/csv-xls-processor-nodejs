version: "3.8"

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  api:
    build:
      context: .
      dockerfile: docker/api.Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=production
      - API_ENDPOINT=http://myecom.api.server.com
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy

  worker:
    build:
      context: .
      dockerfile: docker/worker.Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=production
      - API_ENDPOINT=http://myecom.api.server.com
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy

  monitor:
    build:
      context: .
      dockerfile: docker/monitor.Dockerfile
    ports:
      - "3001:3001"
    environment:
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=production
    volumes:
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy

volumes:
  redis-data:

networks:
  default:
    driver: bridge
